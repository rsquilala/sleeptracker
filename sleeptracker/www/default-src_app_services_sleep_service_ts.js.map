{"version":3,"file":"default-src_app_services_sleep_service_ts.js","mappings":"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","sources":["./src/app/data/overnight-sleep-data.ts","./src/app/data/sleep-data.ts","./src/app/data/stanford-sleepiness-data.ts","./src/app/services/sleep.service.ts","./node_modules/shortid/index.js","./node_modules/shortid/lib/alphabet.js","./node_modules/shortid/lib/build.js","./node_modules/shortid/lib/generate.js","./node_modules/shortid/lib/index.js","./node_modules/shortid/lib/is-valid.js","./node_modules/shortid/lib/random/random-byte-browser.js","./node_modules/shortid/lib/random/random-from-seed.js","./node_modules/shortid/lib/util/cluster-worker-id-browser.js","./node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import { SleepData } from './sleep-data';\n\nexport class OvernightSleepData extends SleepData {\n\tprivate sleepStart:Date;\n\tprivate sleepEnd:Date;\n\n\tconstructor(sleepStart:Date, sleepEnd:Date) {\n\t\tsuper();\n\t\tthis.sleepStart = sleepStart;\n\t\tthis.sleepEnd = sleepEnd;\n\t}\n\n\tsummaryString():string {\n\t\tvar sleepStart_ms = this.sleepStart.getTime();\n\t\tvar sleepEnd_ms = this.sleepEnd.getTime();\n\n\t\t// Calculate the difference in milliseconds\n\t\tvar difference_ms = sleepEnd_ms - sleepStart_ms;\n\t\t    \n\t\t// Convert to hours, minutes, and seconds\n\t\tvar hours = Math.floor(difference_ms / (1000*60*60));\n\t\tvar minutes = Math.floor(difference_ms / (1000*60) % 60);\n\t\tvar seconds = Math.floor(difference_ms / (1000) % 60);\n\n\t\tif (hours < 1) return minutes + \" minutes, \" + seconds + \" seconds.\";\n\t\telse return hours + \" hours, \" + minutes + \" minutes.\";\n\t}\n\n\tget elapsed():number {\n\t\tvar sleepStart_ms = this.sleepStart.getTime();\n\t\tvar sleepEnd_ms = this.sleepEnd.getTime();\n\n\t\t// Calculate the difference in milliseconds\n\t\tvar difference_ms = sleepEnd_ms - sleepStart_ms;\n\n\t\treturn difference_ms\n\t}\n\n\tdateString():string {\n\t\treturn \"Night of \" + this.sleepStart.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' });\n\t}\n}\n","import { generate } from 'shortid';\n\nexport class SleepData {\n\tid:string;\n\tloggedAt:Date;\n\n\tconstructor() {\n\t\t//Assign a random (unique) ID. This may be useful for comparison (e.g., are two logged entries the same).\n\t\tthis.id = generate();\n\t\tthis.loggedAt = new Date();\n\t}\n\n\tsummaryString():string {\n\t\treturn 'Unknown sleep data';\n\t}\n\n\tdateString():string {\n\t\treturn this.loggedAt.toLocaleString('en-US', { weekday: 'short', month: 'short', day: 'numeric', hour: 'numeric', minute: '2-digit', hour12: true});\n\t}\n}\n","/* from the Stanford Sleepiness Scale */\n/* https://web.stanford.edu/~dement/sss.html */\n\nimport { SleepData } from './sleep-data';\n\nexport class StanfordSleepinessData extends SleepData {\n\tpublic static ScaleValues = [undefined,//Sleepiness scale starts at 1\n\t'Feeling active, vital, alert, or wide awake', //1\n\t'Functioning at high levels, but not at peak; able to concentrate', //2\n\t'Awake, but relaxed; responsive but not fully alert', //3\n\t'Somewhat foggy, let down', //4\n\t'Foggy; losing interest in remaining awake; slowed down', //5\n\t'Sleepy, woozy, fighting sleep; prefer to lie down', //6\n\t'No longer fighting sleep, sleep onset soon; having dream-like thoughts']; //7\n\n\tprivate loggedValue:number;\n\n\tconstructor(loggedValue:number, loggedAt:Date = new Date()) {\n\t\tsuper();\n\t\tthis.loggedValue = loggedValue;\n\t\tthis.loggedAt = loggedAt;\n\t}\n\n\tsummaryString():string {\n\t\treturn this.loggedValue + \": \" + StanfordSleepinessData.ScaleValues[this.loggedValue];\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { SleepData } from '../data/sleep-data';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SleepService {\n\tprivate static LoadDefaultData:boolean = true;\n\tpublic static AllSleepData:SleepData[] = [];\n\tpublic static AllOvernightData:OvernightSleepData[] = [];\n\tpublic static AllSleepinessData:StanfordSleepinessData[] = [];\n\n\tconstructor() {\n\t\tif(SleepService.LoadDefaultData) {\n\t\t\tthis.addDefaultData();\n\t\tSleepService.LoadDefaultData = false;\n\t}\n\t}\n\n\tprivate addDefaultData() {\n\t\tthis.logOvernightData(new OvernightSleepData(new Date('February 18, 2021 01:03:00'), new Date('February 18, 2021 09:25:00')));\n\t\tthis.logSleepinessData(new StanfordSleepinessData(4, new Date('February 19, 2021 14:38:00')));\n\t\tthis.logOvernightData(new OvernightSleepData(new Date('February 20, 2021 23:11:00'), new Date('February 21, 2021 08:03:00')));\n\t}\n\n\tpublic logSleepData(sleepData:SleepData) {\n\t\tSleepService.AllSleepData.push(sleepData);\n\t}\n\n\tpublic logOvernightData(sleepData:OvernightSleepData) {\n\t\tthis.logSleepData(sleepData);\n\t\tSleepService.AllOvernightData.push(sleepData);\n\t}\n\n\tpublic logSleepinessData(sleepData:StanfordSleepinessData) {\n\t\tthis.logSleepData(sleepData);\n\t\tSleepService.AllSleepinessData.push(sleepData);\n\t}\n\n\tpublic removeSleepData(sleepData:SleepData) {\n\t\tvar index = SleepService.AllSleepData.indexOf(sleepData);\n\t\tif (index >= 0) SleepService.AllSleepData.splice(index, 1);\n\t}\n\n\tpublic removeOvernightData(sleepData:OvernightSleepData) {\n\t\tthis.removeSleepData(sleepData);\n\n\t\tvar index = SleepService.AllOvernightData.indexOf(sleepData);\n\t\tif (index >= 0) SleepService.AllOvernightData.splice(index, 1);\n\t}\n\n\tpublic removeSleepinessData(sleepData:StanfordSleepinessData) {\n\t\tthis.removeSleepData(sleepData);\n\t\tvar index = SleepService.AllSleepinessData.indexOf(sleepData);\n\t\tif (index >= 0) SleepService.AllSleepinessData.splice(index, 1);\n\t}\n}\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["module","exports","require","randomFromSeed","ORIGINAL","alphabet","previousSeed","shuffled","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","characters","setSeed","seed","shuffle","sourceArray","targetArray","r","nextValue","characterIndex","Math","floor","push","splice","getShuffled","lookup","index","alphabetShuffled","get","generate","REDUCE_TIME","version","counter","previousSeconds","build","clusterWorkerId","str","seconds","Date","now","random","format","number","loopCounter","done","pow","isValid","seedValue","worker","workerId","newCharacters","undefined","isShortId","id","nonAlphabetic","RegExp","replace","test","crypto","window","msCrypto","randomByte","getRandomValues","size","bytes","i","Uint8Array","getNextValue","_seed_","mask","log","LN2","step"],"sourceRoot":"webpack:///","x_google_ignoreList":[4,5,6,7,8,9,10,11,12,13]}